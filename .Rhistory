View(snsData)
View(dfRisk)
survChart1 <- gvisBubbleChart(surveyData,
idvar = "Naam",
xvar = "Waarschijnlijkheid.1",
yvar = "Gevolg.1",
colorvar = "Soort.Risico.1",
options = list(hAxis = '{minValue:1, maxValue:5, title:"Gevolg"}'
,vAxis = '{minValue:1, maxValue:5, title:"Waarschijnlijkheid"}',
width = 700,
height = 700
)
)
plot(survChart1)
url <- 'https://docs.google.com/spreadsheets/d/1f0qX_BBu-4qhKHa6mBiwbUHmUahrXcHeWieBDD9fiXg'
surveyData <- gsheet2tbl(url)
## Bouw Google Bubble Chart 1
survChart1 <- gvisBubbleChart(surveyData,
idvar = "Naam",
xvar = "Waarschijnlijkheid.1",
yvar = "Gevolg.1",
colorvar = "Soort.Risico.1",
options = list(hAxis = '{minValue:1, maxValue:5, title:"Gevolg"}'
,vAxis = '{minValue:1, maxValue:5, title:"Waarschijnlijkheid"}',
width = 700,
height = 700
)
)
plot(survChart1)
runApp('~/GitHub/Survey/Survey')
View(dfRisk)
save.image("~/Desktop/Untitled.RData")
setwd("~/Google Drive/R-workshop/R-workshop_m")
setwd("~/Google Drive/R-workshop/R-workshop_m/datasets")
write.csv(dfRisk, "sessie 3/mean_var.csv")
meanvarDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%203/mean_var.csv", stringsAsFactors = TRUE)
p <- plot_ly(
meanvarDF,
x = Waarschijnlijkheid,
y = Gevolgen,
mode = "markers+text",
color = Perc.Kans,
size = Spreiding,
text = Topic,
#text = paste0(Topic, "<br>", "Kans: ", Perc.Kans, "%"),
cmin = 0,
cmax = 1,
colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
textfont = list(
family = "'Cabin Sketch', cursive",
size = 20,
color = toRGB("black")
)
)
p
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsTable
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsTable
## Staatfdiagram
barplot(subsTable,
xlab="Jaar",
col=rainbow(5)
)
library(googleVis)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF, 3)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame(subsTable)
Table <- gvisTable(subsTable)
plot(Table)
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
View(subsDF)
library(googleVis)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF, 3)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame(subsTable)
Table <- gvisTable(subsTable)
plot(Table)
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
library(googleVis)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF, 3)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame(subsTable)
Table <- gvisTable(subsTable)
plot(Table)
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
library(googleVis)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
Table <- gvisTable(subsDF)
plot(Table)
library(googleVis)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF, 3)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame.as.matrix(subsTable)
Table <- gvisTable(subsDF)
plot(Table)
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
library(googleVis)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
head(subsDF, 3)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame.matrix(subsTable)
Table <- gvisTable(subsDF)
plot(Table)
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
subsTable$Categorie <- rownames(subsDF)
View(subsDF)
subsDF <- as.data.frame.matrix(subsTable)
subsDF <- round(subsDF, 0)
subsTable$Categorie <- rownames(subsDF)
View(subsDF)
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame.matrix(subsTable)
subsDF <- round(subsDF, 0)
subsDF$Categorie <- rownames(subsDF)
Table <- gvisTable(subsDF)
plot(Table)
## Waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame.matrix(subsTable)
subsDF <- round(subsDF, 0)
subsDF$Categorie <- rownames(subsDF)
Table <- gvisTable(subsDF)
plot(Table)
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
kable(subsTable)
library(knitr)
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
kable(subsTable)
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame.matrix(subsTable)
subsDF <- round(subsDF, 0)
subsDF$Categorie <- rownames(subsDF)
kable(subsDF)
library(knitr)
library(dplyr)
subsDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/subs_data.csv", stringsAsFactors = TRUE)
glimpse(subsDF, 3)
## Tabel waarde subsidies per jaar per categorie
subsTable <- xtabs(Bedrag ~ Categorie + Jaar, subsDF)
subsDF <- as.data.frame.matrix(subsTable)
subsDF <- round(subsDF, 0)
kable(subsDF, caption = "Tabel 1. Waarde subsidies per jaar per categorie")
## Staafdiagram
barplot(subsTable,
main="Subsidiebedragen per categorie",
xlab="Jaar",
ylab="Bedrag",
col=rainbow(5)
)
legend("topright",
legend = dimnames(subsTable)$Categorie,
fill=rainbow(5)
)
## Aantal inspecties per woonplaats per jaar
inspecTab <- table(openDF$woonplaats, openDF$inspectiejaar)
inspecTab
str(inspecTab)
## Lees data uit online csv-bestand
openDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%202/open_data.csv", stringsAsFactors = TRUE)
glimpse(openDF)
## Splits de inspectiedatum
openDF <- separate(openDF, inspectiedatum, into = c("inspectiedag", "inspectiemaand", "inspectiejaar"), sep="-", remove = FALSE, extra = "drop", fill = "right")
library(dplyr)
## Splits de inspectiedatum
openDF <- separate(openDF, inspectiedatum, into = c("inspectiedag", "inspectiemaand", "inspectiejaar"), sep="-", remove = FALSE, extra = "drop", fill = "right")
library(dplyr)
library(tidyr)
## Splits de inspectiedatum
openDF <- separate(openDF, inspectiedatum, into = c("inspectiedag", "inspectiemaand", "inspectiejaar"), sep="-", remove = FALSE, extra = "drop", fill = "right")
## Aantal inspecties per woonplaats per jaar
inspecTab <- table(openDF$woonplaats, openDF$inspectiejaar)
inspecTab
str(inspecTab)
## Barplot van aantal inspecties per woonplaats per jaar
barplot(inspecTab,
xlab = "Jaar",
col=rainbow(9)
)
legend("topleft",
legend = plaatsenVec,
fill=rainbow(9)
)
## Conversie tabel naar data frame
inspecDF <- as.data.frame.matrix(inspecTab)
head(inspecDF)
## Bewaar rijnamen
plaatsenVec <- rownames(inspecDF)
cat(plaatsenVec, sep = ", ")
## Conversie tabel naar data frame
inspecDF <- as.data.frame.matrix(inspecTab)
head(inspecDF)
## Bewaar rijnamen
plaatsenVec <- rownames(inspecDF)
cat(plaatsenVec, sep = ", ")
## Barplot van aantal inspecties per woonplaats per jaar
barplot(inspecTab,
xlab = "Jaar",
col=rainbow(9)
)
legend("topleft",
legend = plaatsenVec,
fill=rainbow(9)
)
library(leaflet)
library(gsheet)
library(googleVis)
# Download a sheet
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
latCtr <- mean(gpsData$lat)
lonCtr <- mean(gpsData$lon)
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
g <- gvisMap(gpsData, locationvar = "coords", tipvar = "time", options = list())
plot(g)
View(gpsData)
View(gpsData)
# Download a sheet
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
latCtr <- mean(gpsData$lat)
lonCtr <- mean(gpsData$lon)
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
g <- gvisMap(gpsData, locationvar = "coords", tipvar = "time", options = list())
plot(g)
View(gpsData)
# Download a sheet
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
latCtr <- mean(gpsData$lat)
lonCtr <- mean(gpsData$lon)
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
g <- gvisMap(gpsData, locationvar = "coords", tipvar = "time", options = list())
plot(g)
pal <- colorNumeric(palette = colorspace::diverge_hsv(3), domain = c(min(gpsData$speed), max(gpsData$speed)))
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
# add som circles:
addCircles(color = pal(gpsData$speed), lng=gpsData$lon, lat=gpsData$lat, 20)
m2
setwd("~/Google Drive/R-workshop/R-workshop_m/datasets")
url <- 'https://docs.google.com/spreadsheets/d/1bspvOXiUfYOhw-AZOknyAeyK2aTN5-01BhSevoyyQg0'
gpsData <- gsheet2tbl(url)
gpsData$lat <- gsub(pattern = ".", replacement = "", gpsData$lat, fixed = TRUE)
gpsData$lat <- as.numeric(gpsData$lat)/1000000
gpsData$lon <- gsub(pattern = ".", replacement = "", gpsData$lon, fixed = TRUE)
gpsData$lon <- as.numeric(gpsData$lon)/1000000
gpsData$speed <- gsub(pattern = ".", replacement = "", gpsData$speed, fixed = TRUE)
gpsData$speed <- as.numeric(gpsData$speed)/1000000
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
write.csv(dfRisk, "sessie 3/gps_data.csv")
View(gpsData)
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
gpsData$lat <- gsub(pattern = ".", replacement = "", gpsData$lat, fixed = TRUE)
gpsData$lat <- as.numeric(gpsData$lat)/1000000
gpsData$lon <- gsub(pattern = ".", replacement = "", gpsData$lon, fixed = TRUE)
gpsData$lon <- as.numeric(gpsData$lon)/1000000
gpsData$speed <- gsub(pattern = ".", replacement = "", gpsData$speed, fixed = TRUE)
gpsData$speed <- as.numeric(gpsData$speed)/1000000
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
write.csv(dfRisk, "sessie 3/gps_data.csv")
gpsData <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%203/gps_data.csv",
stringsAsFactors = TRUE)
latCtr <- mean(gpsData$lat)
lonCtr <- mean(gpsData$lon)
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
g <- gvisMap(gpsData, locationvar = "coords", tipvar = "time", options = list())
plot(g)
View(gpsData)
View(gpsData)
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
View(gpsData)
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
gpsData$lat <- gsub(pattern = ".", replacement = "", gpsData$lat, fixed = TRUE)
gpsData$lat <- as.numeric(gpsData$lat)/1000000
gpsData$lon <- gsub(pattern = ".", replacement = "", gpsData$lon, fixed = TRUE)
gpsData$lon <- as.numeric(gpsData$lon)/1000000
gpsData$speed <- gsub(pattern = ".", replacement = "", gpsData$speed, fixed = TRUE)
gpsData$speed <- as.numeric(gpsData$speed)/1000000
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
write.csv(gpsData, "sessie 3/gps_data.csv")
gpsData <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%203/gps_data.csv",
stringsAsFactors = TRUE)
latCtr <- mean(gpsData$lat)
lonCtr <- mean(gpsData$lon)
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
g <- gvisMap(gpsData, locationvar = "coords", tipvar = "time", options = list())
plot(g)
View(gpsData)
gpsData <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%203/gps_data.csv",
stringsAsFactors = TRUE)
View(gpsData)
url <- 'https://docs.google.com/spreadsheets/d/13t04EWh7DbIKy7DPRdaD5OD30PwP9AUJbER48LLdFl4'
gpsData <- gsheet2tbl(url)
View(gpsData)
url <- 'https://docs.google.com/spreadsheets/d/1bspvOXiUfYOhw-AZOknyAeyK2aTN5-01BhSevoyyQg0'
gpsData <- gsheet2tbl(url)
View(gpsData)
gpsData$lat <- gsub(pattern = ".", replacement = "", gpsData$lat, fixed = TRUE)
gpsData$lat <- as.numeric(gpsData$lat)/1000000
gpsData$lon <- gsub(pattern = ".", replacement = "", gpsData$lon, fixed = TRUE)
gpsData$lon <- as.numeric(gpsData$lon)/1000000
gpsData$speed <- gsub(pattern = ".", replacement = "", gpsData$speed, fixed = TRUE)
gpsData$speed <- as.numeric(gpsData$speed)/1000000
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
write.csv(gpsData, "sessie 3/gps_data.csv")
View(gpsData)
gpsData <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%203/gps_data.csv",
stringsAsFactors = TRUE)
View(gpsData)
View(gpsData)
latCtr <- mean(gpsData$lat)
lonCtr <- mean(gpsData$lon)
gpsData$coords <- paste0(gpsData$lat, ":", gpsData$lon)
g <- gvisMap(gpsData, locationvar = "coords", tipvar = "time", options = list())
plot(g)
pal <- colorNumeric(palette = colorspace::diverge_hsv(3), domain = c(min(gpsData$speed), max(gpsData$speed)))
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
# add som circles:
addCircles(color = pal(gpsData$speed), lng=gpsData$lon, lat=gpsData$lat, 20)
m2
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
# add som circles:
addCircles(color = "Red", lng=gpsData$lon, lat=gpsData$lat, 20)
m2
View(gpsData)
setwd("~/Google Drive/R-workshop/R-workshop_m/Datasets")
stalData <- xmlToDataFrame(doc="https://www.veiligstallen.nl/veiligstallen.xml")
packs <- c("gsheet", "dplyr", "readstata13", "XML", "tidyr")
lapply(packs, library, character.only = TRUE)
stalData <- xmlToDataFrame(doc="https://www.veiligstallen.nl/veiligstallen.xml")
install.packages("xml2")
library(xml2)
x <- read_xml("https://www.veiligstallen.nl/veiligstallen.xml")
x <- as_list(x)
content(x)
x
x <- read_xml("https://www.veiligstallen.nl/veiligstallen.xml")
stalData <- xmlToDataFrame(doc="https://www.veiligstallen.nl/veiligstallen.xml")
xmlfile <- xmlTreeParse("https://www.veiligstallen.nl/veiligstallen.xml")
eventData <- read.csv("http://open.datapunt.amsterdam.nl/Evenementen.csv")
write.csv(stalData, "sessie 3/event_data.csv")
write.csv(eventData, "sessie 3/event_data.csv")
eventDF <- read.csv(file = "https://github.com/witusj/R-workshop/raw/gh-pages/Datasets/sessie%203/event_data.csv",
stringsAsFactors = TRUE)
View(eventData)
View(eventData)
View(eventDF)
View(eventData)
eventData <- read.csv("http://open.datapunt.amsterdam.nl/Evenementen.csv")
eventData <- read.csv("http://open.datapunt.amsterdam.nl/Evenementen.csv", sep = ";")
write.csv(eventData, "sessie 3/event_data.csv")
eventData <- read.csv("http://open.datapunt.amsterdam.nl/Evenementen.csv", sep = ";")
eventDF <- read.csv(file = "https://github.com/witusj/R-workshop/raw/gh-pages/Datasets/sessie%203/event_data.csv",
stringsAsFactors = TRUE)
View(eventDF)
m2 <- leaflet() %>%
addTiles() %>%
#setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$longitude, lat=eventDF$latitude, 20)
m2
m2 <- leaflet() %>%
addTiles() %>%
#setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20)
m2
eventDF <- read.csv(file = "https://github.com/witusj/R-workshop/raw/gh-pages/Datasets/sessie%203/event_data.csv",
stringsAsFactors = TRUE)
latCtr <- mean(at=eventDF$Latitude)
lonCtr <- mean(eventDF$Longitude)
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20)
m2
latCtr <- mean(eventDF$Latitude)
lonCtr <- mean(eventDF$Longitude)
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20)
m2
eventDF$Latitude
mean(eventDF$Latitude)
eventDF <- read.csv(file = "https://github.com/witusj/R-workshop/raw/gh-pages/Datasets/sessie%203/event_data.csv",
stringsAsFactors = FALSE)
eventDF$Latitude <- as.numeric(eventDF$Latitude)
eventDF$Longitude <- as.numeric(eventDF$Longitude)
eventDF <- read.csv(file = "https://github.com/witusj/R-workshop/raw/gh-pages/Datasets/sessie%203/event_data.csv",
stringsAsFactors = FALSE)
eventDF$Latitude <- as.numeric(gsub(",", ".", eventDF$Latitude))
eventDF$Longitude <- as.numeric(gsub(",", ".", eventDF$Longitude))
latCtr <- mean(eventDF$Latitude)
lonCtr <- mean(eventDF$Longitude)
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20)
m2
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20, popup = ~Title)
m2
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20, popup = ~as.character(Title))
m2
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20, popup = eventDT$Title))
m2
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20, popup = eventDT$Title)
m2
m2 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
addCircles(color = "Red", lng=eventDF$Longitude, lat=eventDF$Latitude, 20, popup = eventDF$Title)
m2
View(eventDF)
install.packages("LSAfun")
